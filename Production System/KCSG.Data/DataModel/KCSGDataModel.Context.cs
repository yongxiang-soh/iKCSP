//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KCSG.Data.DataModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class KCSGConnectionString : DbContext
    {
        public KCSGConnectionString()
            : base("name=KCSGConnectionString")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<RealtimeConnection> RealtimeConnections { get; set; }
        public virtual DbSet<Te80_Env_Mesp> Te80_Env_Mesp { get; set; }
        public virtual DbSet<Te81_Env_Temp> Te81_Env_Temp { get; set; }
        public virtual DbSet<Te82_Env_Aval> Te82_Env_Aval { get; set; }
        public virtual DbSet<Te83_Env_Else> Te83_Env_Else { get; set; }
        public virtual DbSet<Te84_Env_Lot> Te84_Env_Lot { get; set; }
        public virtual DbSet<Te85_Env_Prod> Te85_Env_Prod { get; set; }
        public virtual DbSet<TH60_MtrWhsCmdHst> TH60_MtrWhsCmdHst { get; set; }
        public virtual DbSet<TH61_MtrStgRtrHst> TH61_MtrStgRtrHst { get; set; }
        public virtual DbSet<TH63_PrePdtWhsCmdHst> TH63_PrePdtWhsCmdHst { get; set; }
        public virtual DbSet<TH64_PrePdtStgRtrHst> TH64_PrePdtStgRtrHst { get; set; }
        public virtual DbSet<TH65_PdtStgRtrHst> TH65_PdtStgRtrHst { get; set; }
        public virtual DbSet<TH66_PdtWhsCmdHst> TH66_PdtWhsCmdHst { get; set; }
        public virtual DbSet<TH67_CrfHst> TH67_CrfHst { get; set; }
        public virtual DbSet<TH70_PdtShipHst> TH70_PdtShipHst { get; set; }
        public virtual DbSet<TM01_Material> TM01_Material { get; set; }
        public virtual DbSet<TM02_PrePdtMkp> TM02_PrePdtMkp { get; set; }
        public virtual DbSet<TM03_PreProduct> TM03_PreProduct { get; set; }
        public virtual DbSet<TM04_Supplier> TM04_Supplier { get; set; }
        public virtual DbSet<TM05_Conveyor> TM05_Conveyor { get; set; }
        public virtual DbSet<TM06_Terminal> TM06_Terminal { get; set; }
        public virtual DbSet<TM07_Calendar> TM07_Calendar { get; set; }
        public virtual DbSet<TM09_Product> TM09_Product { get; set; }
        public virtual DbSet<TM10_EndUsr> TM10_EndUsr { get; set; }
        public virtual DbSet<TM11_PckMtr> TM11_PckMtr { get; set; }
        public virtual DbSet<TM12_TrmPicMgn> TM12_TrmPicMgn { get; set; }
        public virtual DbSet<TM13_Function> TM13_Function { get; set; }
        public virtual DbSet<TM14_Device> TM14_Device { get; set; }
        public virtual DbSet<TM15_SubMaterial> TM15_SubMaterial { get; set; }
        public virtual DbSet<TM16_Password> TM16_Password { get; set; }
        public virtual DbSet<TM18_Access> TM18_Access { get; set; }
        public virtual DbSet<TX30_Reception> TX30_Reception { get; set; }
        public virtual DbSet<TX31_MtrShfSts> TX31_MtrShfSts { get; set; }
        public virtual DbSet<TX32_MtrShf> TX32_MtrShf { get; set; }
        public virtual DbSet<TX33_MtrShfStk> TX33_MtrShfStk { get; set; }
        public virtual DbSet<TX34_MtrWhsCmd> TX34_MtrWhsCmd { get; set; }
        public virtual DbSet<TX37_PrePdtShfSts> TX37_PrePdtShfSts { get; set; }
        public virtual DbSet<TX39_PdtPln> TX39_PdtPln { get; set; }
        public virtual DbSet<TX40_PdtShfStk> TX40_PdtShfStk { get; set; }
        public virtual DbSet<TX41_TbtCmd> TX41_TbtCmd { get; set; }
        public virtual DbSet<TX42_KndCmd> TX42_KndCmd { get; set; }
        public virtual DbSet<TX43_KndRcd> TX43_KndRcd { get; set; }
        public virtual DbSet<TX44_ShippingPlan> TX44_ShippingPlan { get; set; }
        public virtual DbSet<TX45_ShipCommand> TX45_ShipCommand { get; set; }
        public virtual DbSet<TX46_SupMtrStk> TX46_SupMtrStk { get; set; }
        public virtual DbSet<TX47_PdtWhsCmd> TX47_PdtWhsCmd { get; set; }
        public virtual DbSet<TX48_NoManage> TX48_NoManage { get; set; }
        public virtual DbSet<TX49_PrePdtShfStk> TX49_PrePdtShfStk { get; set; }
        public virtual DbSet<TX50_PrePdtWhsCmd> TX50_PrePdtWhsCmd { get; set; }
        public virtual DbSet<TX51_PdtShfSts> TX51_PdtShfSts { get; set; }
        public virtual DbSet<TX52_MtrMsrSndCmd> TX52_MtrMsrSndCmd { get; set; }
        public virtual DbSet<TX53_OutSidePrePdtStk> TX53_OutSidePrePdtStk { get; set; }
        public virtual DbSet<TX55_KndCmdMsrSnd> TX55_KndCmdMsrSnd { get; set; }
        public virtual DbSet<TX56_TbtPdt> TX56_TbtPdt { get; set; }
        public virtual DbSet<TX57_PdtShf> TX57_PdtShf { get; set; }
        public virtual DbSet<TX58_OutPlanPdt> TX58_OutPlanPdt { get; set; }
        public virtual DbSet<TX91_MaterialTotal> TX91_MaterialTotal { get; set; }
        public virtual DbSet<TX92_PrepdtTotal> TX92_PrepdtTotal { get; set; }
        public virtual DbSet<TX93_ProductTotal> TX93_ProductTotal { get; set; }
        public virtual DbSet<TX94_Prepdtplan> TX94_Prepdtplan { get; set; }
        public virtual DbSet<TH62_KndCmdMsrSndHst> TH62_KndCmdMsrSndHst { get; set; }
        public virtual DbSet<TH68_MtrMsrSndCmdHst> TH68_MtrMsrSndCmdHst { get; set; }
        public virtual DbSet<TH69_MtrRtrMsrSndCmdHst> TH69_MtrRtrMsrSndCmdHst { get; set; }
        public virtual DbSet<TM08_Container> TM08_Container { get; set; }
        public virtual DbSet<TX54_MtrRtrMsrSndCmd> TX54_MtrRtrMsrSndCmd { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TM17_TermStatus> TM17_TermStatus { get; set; }
        public virtual DbSet<te90_env_tmp> te90_env_tmp { get; set; }
    
        public virtual ObjectResult<FindStockTakingPreProduct_Result> FindStockTakingPreProduct(Nullable<int> fromShelfNo, Nullable<int> toShelfNo, string f37_stocktakingflag, string f37_shelfStatus)
        {
            var fromShelfNoParameter = fromShelfNo.HasValue ?
                new ObjectParameter("fromShelfNo", fromShelfNo) :
                new ObjectParameter("fromShelfNo", typeof(int));
    
            var toShelfNoParameter = toShelfNo.HasValue ?
                new ObjectParameter("toShelfNo", toShelfNo) :
                new ObjectParameter("toShelfNo", typeof(int));
    
            var f37_stocktakingflagParameter = f37_stocktakingflag != null ?
                new ObjectParameter("f37_stocktakingflag", f37_stocktakingflag) :
                new ObjectParameter("f37_stocktakingflag", typeof(string));
    
            var f37_shelfStatusParameter = f37_shelfStatus != null ?
                new ObjectParameter("f37_shelfStatus", f37_shelfStatus) :
                new ObjectParameter("f37_shelfStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FindStockTakingPreProduct_Result>("FindStockTakingPreProduct", fromShelfNoParameter, toShelfNoParameter, f37_stocktakingflagParameter, f37_shelfStatusParameter);
        }
    
        public virtual ObjectResult<GetStockTakingPreProductByShelf_Result> GetStockTakingPreProductByShelf(Nullable<int> shelfNo)
        {
            var shelfNoParameter = shelfNo.HasValue ?
                new ObjectParameter("ShelfNo", shelfNo) :
                new ObjectParameter("ShelfNo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStockTakingPreProductByShelf_Result>("GetStockTakingPreProductByShelf", shelfNoParameter);
        }
    
        public virtual int FindPrePdtShfSts(string location)
        {
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FindPrePdtShfSts", locationParameter);
        }
    
        public virtual int GetPdtShfSts(string location)
        {
            var locationParameter = location != null ?
                new ObjectParameter("location", location) :
                new ObjectParameter("location", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPdtShfSts", locationParameter);
        }
    
        public virtual int DeleteMonthlyProcess(Nullable<System.DateTime> startDate, string notSotoked)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var notSotokedParameter = notSotoked != null ?
                new ObjectParameter("notSotoked", notSotoked) :
                new ObjectParameter("notSotoked", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMonthlyProcess", startDateParameter, notSotokedParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int DeleteMonthlyProcess1(Nullable<System.DateTime> startDate, string notSotoked)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(System.DateTime));
    
            var notSotokedParameter = notSotoked != null ?
                new ObjectParameter("notSotoked", notSotoked) :
                new ObjectParameter("notSotoked", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMonthlyProcess1", startDateParameter, notSotokedParameter);
        }
    
        public virtual int sp_alterdiagram1(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram1", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram1(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram1", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram1(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram1", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition1_Result> sp_helpdiagramdefinition1(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition1_Result>("sp_helpdiagramdefinition1", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams1_Result> sp_helpdiagrams1(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams1_Result>("sp_helpdiagrams1", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram1(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram1", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams1");
        }
    }
}
