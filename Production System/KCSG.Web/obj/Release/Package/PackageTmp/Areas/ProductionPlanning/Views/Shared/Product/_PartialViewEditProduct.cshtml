@using KCSG.Core.Constants
@using KCSG.Core.Controls
@using KCSG.Core.CustomControls
@using KCSG.Core.Helper
@using KCSG.Data.DataModel
@using KCSG.jsGrid.MVC
@model KCSG.Web.Areas.ProductionPlanning.ViewModels.Product.ProductViewModel

<script>
    var formUrlSub = {
        urlGetSubMaterialName: '@Url.Action("GetSubMaterialName","Product")',
        urlEdit: '@Url.Action("CreateSub", "Product")',
        urlDelete: '@Url.Action("DeleteSubMaterial", "Product")',

    };
    var urlSaveProduct = '@Url.Action("Edit","Product")';
</script>
@using (Ajax.BeginForm("Edit", "Product", null, new AjaxOptions() { HttpMethod = "POST", OnSuccess = "onSuccess(data, status, xhr)" }, new { @id = "addNewForm", @area = "ProductionPlanning" }))
{
    @Html.HiddenFor(model => model.IsCreate)
    <div class="panel panel-danger">
        <div class="panel-heading">
            @if (Model.IsCreate)
            {
                <span>Add New Product Master DB  - TCPP032F</span>
            }
            else
            {
                <span>Update Product Master DB  - TCPP032F</span>
            }
        </div>
        <div class="panel-body">
            <form id="formProduct">
                <div class="row form-group">
                    <div class="col-xs-6">
                        <div class="col-xs-4">
                            @Html.ExtLabelFor(model => model.F09_ProductCode)
                        </div>
                        <div class="col-xs-8">
                            @if (Model.IsCreate)
                            {
                                @Html.ExtTextBoxFor(model => model.F09_ProductCode, new { onchange = "ChangeProductCode()", id = "txtProductcode" })
                            }
                            else
                            {
                                @Html.ExtTextBoxFor(model => model.F09_ProductCode, new { style = "width:100%", @readonly = "readonly", @class = "form-control", id = "txtProductcode" })
                                @Html.HiddenFor(model => model.F09_ProductCode)
                            }
                        </div>
                    </div>
                    <div class="col-xs-6">
                        <div class="col-xs-4">
                            @Html.ExtLabelFor(model => model.F09_ProductDesp)
                        </div>
                        <div class="col-xs-8">
                            @Html.ExtTextBoxFor(model => model.F09_ProductDesp, new { onchange = "ChangeProductName()" })
                        </div>
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-xs-6">
                        <div class="col-xs-4">
                            @Html.ExtLabelFor(model => model.F09_PreProductCode)
                        </div>
                        <div class="col-xs-8">
                            @Html.ExtTextBoxAddOnFor(model => model.F09_PreProductCode, CustomControlConstants.AddOn.Search, "#modalPreProductCodeSelect", new { @id = "txtPreProductCode" })
                        </div>
                    </div>
                    <div class="col-xs-6">
                        <div class="col-xs-4">
                            @Html.ExtLabelFor(model => model.F09_EndUserCode)
                        </div>
                        <div class="col-xs-8">
                            @Html.ExtTextBoxAddOnFor(model => model.F09_EndUserCode, CustomControlConstants.AddOn.Search, "#modalEndUserCodeSelect", new { @id = "txtEndUserCode" })
                        </div>
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-xs-6">
                        <div class="col-xs-4">
                            @Html.ExtLabelFor(model => model.F09_TabletSize)
                        </div>
                        <div class="col-xs-8">
                            <div class="col-xs-5 padding-left-none padding-right-none">
                                @Html.ExtNumberAddOnFor(model => model.F09_TabletSize, CustomControlConstants.AddOn.Text, "(mm)", new KCSG.Core.CustomControls.NumberOption() { NumberOfDecimal = 0, Min = 0, Max = 999 })
                            </div>
                            <div class="col-xs-2">
                                <label>X</label>
                            </div>
                            <div class="col-xs-5 padding-right-none">
                                @Html.ExtNumberAddOnFor(model => model.F09_TabletSize2, CustomControlConstants.AddOn.Text, "(g)", new KCSG.Core.CustomControls.NumberOption() { NumberOfDecimal = 1, Min = 0, Max = 999.9 })
                            </div>

                        </div>
                    </div>
                    <div class="col-xs-6">
                        <div class="col-xs-4">
                            @Html.ExtLabelFor(model => model.F09_TabletType)
                        </div>
                        <div class="col-xs-8">
                            @Html.ExtTextBoxFor(model => model.F09_TabletType)
                        </div>
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-xs-6">
                        <div class="col-xs-4">
                            @Html.ExtLabelFor(model => model.F09_TabletAmount)
                        </div>
                        <div class="col-xs-8">

                            @Html.ExtNumberAddOnFor(model => model.F09_TabletAmount, CustomControlConstants.AddOn.Text, "(Q/M)T", new KCSG.Core.CustomControls.NumberOption() { NumberOfDecimal = 0, Max = 999 })


                        </div>
                    </div>
                    <div class="col-xs-6">
                        <div class="col-xs-4">
                            @Html.ExtLabelFor(model => model.F09_KneadingTime)
                        </div>
                        <div class="col-xs-8">

                            @Html.ExtNumberAddOnFor(model => model.F09_KneadingTime, CustomControlConstants.AddOn.Text, "(M/lot)", new KCSG.Core.CustomControls.NumberOption() { NumberOfDecimal = 0, Max = 999 })

                        </div>
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-xs-6">
                        <div class="col-xs-4 editor-label">
                            @Html.ExtLabelFor(model => model.F09_Unit)
                        </div>
                        <div class="col-xs-8 editor-field">
                            @if (Model.IsCreate)
                            {
                                @Html.ExtTextBoxFor(model => model.F09_Unit, new { onchange = " UPPERCASE(this)" })
                            }
                            @if (!Model.IsCreate)
                            {
                                @Html.ExtTextBoxFor(model => model.F09_Unit, new { onchange = " UPPERCASE(this)", @readonly = "readonly" })
                            }
                        </div>
                    </div>
                    <div class="col-xs-6">

                        <div class="col-xs-4">
                            @Html.ExtLabelFor(model => model.F09_Label)
                        </div>
                        <div class="col-xs-8">
                            @Html.ExtTextBoxFor(model => model.F09_Label)
                        </div>
                    </div>
                </div>

                <div class="row form-group">
                    <div class="col-xs-6">

                        <div class="col-xs-4 editor-label">
                            @Html.ExtLabelFor(model => model.F09_Factor)
                        </div>
                        <div class="col-xs-8 editor-field">
                            @Html.ExtTextBoxFor(model => model.F09_Factor@*, new {style = "width:100%;margin-left: 5px;"}*@)
                        </div>
                    </div>
                    <div class="col-xs-6">
                        <div class="col-xs-4">
                            @Html.ExtLabelFor(model => model.F09_YieldRate)
                        </div>
                        <div class="col-xs-8">

                            @Html.ExtNumberAddOnFor(model => model.F09_YieldRate, CustomControlConstants.AddOn.Text, "&#37;", new KCSG.Core.CustomControls.NumberOption() { NumberOfDecimal = 2, Min = 0, Max = 999 })

                        </div>
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-xs-6">

                        <div class="col-xs-4 editor-label">
                            @Html.ExtLabelFor(model => model.F09_NeedTime)
                        </div>
                        <div class="col-xs-8 editor-field">

                            @Html.ExtNumberAddOnFor(model => model.F09_NeedTime, CustomControlConstants.AddOn.Text, "(days)", new KCSG.Core.CustomControls.NumberOption() { NumberOfDecimal = 0, Min = 0, Max = 999 })
                        </div>
                    </div>
                    <div class="col-xs-6">




                        <div class="col-xs-4 editor-label">
                            @Html.ExtLabelFor(model => model.F09_PackingUnit)
                        </div>
                        <div class="col-xs-8 editor-field">
                            @Html.ExtNumberFor(model => model.F09_PackingUnit, new KCSG.Core.CustomControls.NumberOption() { NumberOfDecimal = 2, Max = 999.99 })
                        </div>
                    </div>

                </div>
                <div class="row form-group">
                    <div class="col-xs-6">
                        <div class="col-xs-4 editor-label">
                            @Html.ExtLabelFor(model => model.F09_StdStkMtn)
                        </div>
                        <div class="col-xs-8 editor-field">
                            @Html.ExtNumberFor(model => model.F09_StdStkMtn, new KCSG.Core.CustomControls.NumberOption() { NumberOfDecimal = 2, Max = 99.99 })
                        </div>
                    </div>
                    <div class="col-xs-6">
                        <div class="col-xs-4 editor-label">
                            @Html.ExtLabelFor(model => model.F09_ValidPeriod)
                        </div>
                        <div class="col-xs-8 editor-field">

                            @Html.ExtNumberAddOnFor(model => model.F09_ValidPeriod, CustomControlConstants.AddOn.Text, "(month)", new KCSG.Core.CustomControls.NumberOption() { NumberOfDecimal = 0, Min = 0, Max = 99 })

                        </div>
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-xs-6">
                        <div class="col-lg-4">@Html.ExtLabelFor(m => m.F09_InsideLabelClass)</div>
                        <div class="col-lg-8">
                            @Html.ExtRadioButtonFor(m => m.F09_InsideLabelClass, EnumsHelper.GetListItemsWithDescription<Constants.InsideLabelClass>(Constants.InsideLabelClass.OnePiece))
                        </div>
                    </div>
                    <div class="col-xs-6">
                        <div class="col-lg-4">@Html.ExtLabelFor(m => m.F09_LowTmpCls)</div>
                        <div class="col-lg-8">
                            @Html.ExtRadioButtonFor(m => m.F09_LowTmpCls, EnumHelper.GetSelectList(typeof(Constants.Temperature), Constants.Temperature.Normal))
                        </div>
                    </div>
                </div>
                <div class="row form-group">
                    <div class="col-lg-12">
                        <div class="col-lg-12">
                            @Html.ExtLabelFor(m => m.SupMaterial)
                        </div>
                    </div>

                    <div class="col-xs-12 ">
                        <div class="col-xs-12 form-group">
                            @Html.Grid(Model.GridSupMaterial)
                            <span class="field-validation-error"><span id="materialListError" hidden></span></span>
                        </div>
                    </div>
                    <div class="col-lg-12 ">
                        <div class="col-lg-12 form-group">
                            <button type="button" class="btn btn-flat btn-default btn-less-5-chars" id="btnAddSup" onclick=" addNewSub() ">Add</button>
                            <button type="button" class="btn btn-flat btn-default btn-less-5-chars" onclick=" UpdateSubMaterial() " id="btnUpdateSupMaterial" disabled>Update</button>
                            <button type="button" class="btn btn-flat btn-default btn-less-5-chars" onclick=" DeleteSub() " id="btnDeleteSupMaterial" disabled>Delete</button>
                        </div>
                    </div>
                </div>
                <div class="col-xs-12 margin-top-10">
                    <div id="formAddSup"></div>
                </div>
                <div class="row btnControl" style="margin: 0 0 20px 0;">
                    <button type="button" class="btn btn-flat btn-default btn-less-5-chars" onclick="SaveProduct()">OK</button>
                    <button type="button" class="btn btn-flat btn-default btn-less-5-chars" onclick=" hideForm() ">Cancel</button>
                </div>
            </form>
        </div>
    </div>
}



<script>
    $(document)
        .ready(function () {

            $.validator.unobtrusive.parse('#addNewForm');
            var request = {
                productCode: $("#F09_ProductCode").val()

            }
            gridHelper.searchObject("SupMaterialGrid", request);
            $('#SupMaterialGrid').on('change', 'input[type="radio"]', function () {
                // If checkbox is not checked
                var counterChecked = 0;
                this.checked ? counterChecked++ : counterChecked--;
                counterChecked > 0 ? $('#btnDeleteSupMaterial').prop("disabled", false) : $('#btnDeleteSupMaterial').prop("disabled", true);
                counterChecked > 0 ? $('#btnUpdateSupMaterial').prop("disabled", false) : $('#btnUpdateSupMaterial').prop("disabled", true);
            });
        });

</script>
