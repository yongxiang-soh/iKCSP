@{
    ViewBag.ScreenId = "TCRM031F";
    ViewBag.Title = "Storage of Material";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model KCSG.Web.Areas.MaterialManagement.ViewModels.StorageOfMaterial.StorageOfMaterialViewModel
@using KCSG.Core;
@using KCSG.Core.Controls
@using KCSG.Core.CustomControls

@*<script src="~/Scripts/jquery.signalR-2.2.1.min.js"></script>
<script src="/signalr/hubs"></script>*@
<script src="~/Scripts/areas/signalrCommon.js"></script>
<script type="text/javascript" src="/Scripts/areas/storageOfMaterial/StorageOfMaterial.js"></script>

<script type="text/javascript">
    @*var formUrl = {
        urlGetMaterialName: '@Url.Action("GetMaterialName", "Material", new { area = "ProductionPlanning" })'
    }*@ 
    var message = {
        MSG08:' @KCSG.Core.Constants.Constants.Messages.StoreMaterial_MSG08',
        MSG09: ' @KCSG.Core.Constants.Constants.Messages.StoreMaterial_MSG09',
        MSG12: '@KCSG.Core.Constants.Constants.Messages.StoreMaterial_MSG12',
        MSG14: '@KCSG.Core.Constants.Constants.Messages.StoreMaterial_MSG14'
      }

</script>
@*@using (Ajax.BeginForm("Store", "StorageOfMaterial", new AjaxOptions() { HttpMethod = "POST", OnSuccess = "onSuccess(data, status, xhr)", Confirm = "Are you sure you want to store?" }, new { @id = "storeMaterialForm" }))*@
@using (Ajax.BeginForm("Store", "StorageOfMaterial", new AjaxOptions() { HttpMethod = "POST", OnSuccess = "onSuccess(data, status, xhr)" }, new { @id = "storeMaterialForm" }))
{

    @Html.HiddenFor(m => m.UnitFlag, new { id = "hdfUnit" })
    @Html.HiddenFor(m => m.F01_Unit, new { id = "txtUnit" })
    <div class="col-lg-12">
        <div class="panel panel-danger" id="searchForm">
            <div class="panel-heading">General Information</div>
            <div class="panel-body">

                <div class="row">
                    <div class="col-lg-2">
                        @Html.ExtLabelFor(model => model.PalletNo)
                    </div>
                    <div class="col-lg-4 form-group">
                        @Html.ExtTextBoxFor(model => model.PalletNo)
                    </div>

                    <div class="col-lg-2">
                        @Html.ExtLabelFor(model => model.F30_PrcOrdNo)
                    </div>
                    <div class="col-lg-4 form-group">
                        @Html.ExtTextBoxAddOnFor(model => model.F30_PrcOrdNo, CustomControlConstants.AddOn.Search, "#modalPONOSelect", new { @id = "txtPONoCode" })
                    </div>
                </div>

                <div class="row">
                    <div class="col-lg-2">
                        @Html.ExtLabelFor(model => model.F30_PrtDvrNo)
                    </div>

                    <div class="col-lg-4 form-group">
                        @Html.ExtTextBoxFor(model => model.F30_PrtDvrNo, new { @readonly = "true", @id = "txtPartialDelivery" })
                    </div>

                    <div class="col-lg-2">
                        @Html.ExtLabelFor(model => model.F01_MaterialCode, new { @readonly = "true" })
                    </div>

                    <div class="col-lg-4 form-group">
                        @Html.ExtTextBoxAddOnFor(model => model.F01_MaterialCode, CustomControlConstants.AddOn.Search, "#modalMaterialCodeSelect", new { @id = "txtMaterialCode" })
                    </div>

                </div>

                <div class="row">
                    <div class="col-lg-2">
                        @Html.ExtLabelFor(model => model.F01_MaterialDsp)
                    </div>

                    <div class="col-lg-4">
                        @Html.ExtTextBoxFor(model => model.F01_MaterialDsp, new { @readonly = "true", @id = "txtMaterialName" })
                    </div>
                </div>

                <div class="row form-group">
                    <hr style="border-top: 1px solid #f2dede;" />
                </div>


            </div>
            <div class="panel-body">
                <div class="row form-group">
                    <div class="col-lg-2">&nbsp;</div>
                    <div class="col-lg-2">
                        @Html.ExtLabelFor(model => model.MaterialLotNo01)<span style="color: red;font-size: 17px">*</span>
                    </div>
                    <div class="col-lg-2">
                        @Html.ExtLabelFor(model => model.PackUnit01)
                    </div>
                    <div class="col-lg-2">
                        @Html.ExtLabelFor(model => model.PackQuantity01)<span style="color: red">*</span>
                    </div>
                    <div class="col-lg-2">
                        @Html.ExtLabelFor(model => model.Fraction01)<span style="color: red">*</span>
                    </div>
                    <div class="col-lg-2">
                        @Html.ExtLabelFor(model => model.Total01)
                    </div>
                </div>

                <div class="row  form-group">
                    <div class="col-lg-2">
                        <button class="btn btn-flat btn-default col-lg-12" type="button" onclick=" clearRow(1) ">
                            <i class="fa fa-trash-o"></i> Clear
                        </button>
                    </div>
                    <div class="col-lg-2 padding-right-none errorInput">
                        @Html.ExtTextBoxFor(model => model.MaterialLotNo01, new { @Class = "material-lot-no" })
                        <span class="field-validation-error"><span id="errorList" hidden></span></span>
                        <span class="field-validation-error"><span id="errorList00" hidden></span></span>
                    </div>
                    <div class="col-lg-2 padding-right-none">
                        @Html.ExtTextBoxFor(model => model.PackUnit01, new { onchange = "PackUnit(1)", @readonly = "true", @class = "packunit" })
                    </div>
                    <div class="col-lg-2 padding-right-none errorInput">
                        @Html.ExtNumberFor(model => model.PackQuantity01, new NumberOption() { NumberOfDecimal = 0, Min = 0, Max = 999 }, new { onchange = "PackQuantity(1)"})
                    </div>
                    <div class="col-lg-2 padding-right-none">
                        @Html.ExtNumberFor(model => model.Fraction01, new NumberOption() { NumberOfDecimal = 0, Min = 0, Max = 999999 }, new { onchange = "PackQuantity(1)"})
                    </div>
                    <div class="col-lg-2">
                        @Html.ExtTextBoxFor(model => model.Total01, new { @readonly = "true" })
                    </div>

                </div>


                <div class="row form-group">
                    <div class="col-lg-2">
                        <button type="button" class="btn btn-flat btn-default col-lg-12" onclick=" clearRow(2) ">
                            <i class="fa fa-trash-o"></i> Clear
                        </button>
                    </div>

                    <div class="col-lg-2 padding-right-none">
                        @Html.ExtTextBoxFor(model => model.MaterialLotNo02, new { @Class = "material-lot-no" })
                        <span class="field-validation-error"><span id="errorList01" hidden></span></span>
                    </div>
                    <div class="col-lg-2 padding-right-none">
                        @Html.ExtTextBoxFor(model => model.PackUnit02, new { @readonly = "true", @class = "packunit", onchange = "PackUnit(2)" })
                    </div>
                    <div class="col-lg-2 padding-right-none">
                        @Html.ExtNumberFor(model => model.PackQuantity02, new NumberOption() { NumberOfDecimal = 0, Min = 0, Max = 999 }, new { onchange = "PackQuantity(2)" })
                    </div>
                    <div class="col-lg-2 padding-right-none">
                        @Html.ExtNumberFor(model => model.Fraction02, new NumberOption() { NumberOfDecimal = 0, Min = 0, Max = 999999 }, new { onchange = "PackQuantity(2)" })
                    </div>
                    <div class="col-lg-2">
                        @Html.ExtTextBoxFor(model => model.Total02, new { @readonly = "true" })
                    </div>
                </div>

                <div class="row form-group">
                    <div class="col-lg-2">
                        <button class="btn btn-flat btn-default col-lg-12" onclick=" clearRow(3) " type="button">
                            <i class="fa fa-trash-o"></i> Clear
                        </button>
                    </div>

                    <div class="col-lg-2 padding-right-none">
                        @Html.ExtTextBoxFor(model => model.MaterialLotNo03, new { @Class = "material-lot-no" })
                        <span class="field-validation-error"><span id="errorList02" hidden></span></span>
                    </div>
                    <div class="col-lg-2 padding-right-none">
                        @Html.ExtTextBoxFor(model => model.PackUnit03, new { @readonly = "true", @class = "packunit", onchange = "PackUnit(3)" })
                    </div>
                    <div class="col-lg-2 padding-right-none">
                        @Html.ExtNumberFor(model => model.PackQuantity03, new NumberOption() { NumberOfDecimal = 0, Min = 0, Max = 999 }, new { onchange = "PackQuantity(3)" })
                    </div>
                    <div class="col-lg-2 padding-right-none">
                        @Html.ExtNumberFor(model => model.Fraction03, new NumberOption() { NumberOfDecimal = 0, Min = 0, Max = 999999 }, new { onchange = "PackQuantity(3)" })
                    </div>
                    <div class="col-lg-2">
                        @Html.ExtTextBoxFor(model => model.Total03, new { @readonly = "true" })
                    </div>
                </div>

                <div class="row form-group">
                    <div class="col-lg-2">
                        <button class="btn btn-flat btn-default col-lg-12" onclick="clearRow(4)" type="button">
                            <i class="fa fa-trash-o"></i> Clear
                        </button>
                    </div>
                    <div class="col-lg-2 padding-right-none">
                        @Html.ExtTextBoxFor(model => model.MaterialLotNo04, new { @Class = "material-lot-no" })
                        <span class="field-validation-error"><span id="errorList03" hidden></span></span>
                    </div>
                    <div class="col-lg-2 padding-right-none">
                        @Html.ExtTextBoxFor(model => model.PackUnit04, new { @readonly = "true", @class = "packunit", onchange = "PackUnit(4)" })
                    </div>
                    <div class="col-lg-2 padding-right-none">
                        @Html.ExtNumberFor(model => model.PackQuantity04, new NumberOption() { NumberOfDecimal = 0, Min = 0, Max = 999 }, new { onchange = "PackQuantity(4)" })
                    </div>
                    <div class="col-lg-2 padding-right-none">
                        @Html.ExtNumberFor(model => model.Fraction04, new NumberOption() { NumberOfDecimal = 0, Min = 0, Max = 999999 }, new { onchange = "PackQuantity(4)" })
                    </div>
                    <div class="col-lg-2">
                        @Html.ExtTextBoxFor(model => model.Total04, new { @readonly = "true" })
                    </div>
                </div>

                <div class="row form-group">
                    <div class="col-lg-2">
                        <button class="btn btn-flat btn-default col-lg-12" onclick=" clearRow(5) " type="button">
                            <i class="fa fa-trash-o"></i> Clear
                        </button>
                    </div>

                    <div class="col-lg-2 padding-right-none">
                        @Html.ExtTextBoxFor(model => model.MaterialLotNo05, new { @Class = "material-lot-no" })
                        <span class="field-validation-error"><span id="errorList04" hidden></span></span>
                    </div>
                    <div class="col-lg-2 padding-right-none">
                        @Html.ExtTextBoxFor(model => model.PackUnit05, new { @readonly = "true", @class = "packunit", onchange = "PackUnit(5)" })
                    </div>
                    <div class="col-lg-2 padding-right-none">
                        @Html.ExtNumberFor(model => model.PackQuantity05, new NumberOption() { NumberOfDecimal = 0, Min = 0, Max = 999 }, new { onchange = "PackQuantity(5)" })
                    </div>
                    <div class="col-lg-2 padding-right-none">
                        @Html.ExtNumberFor(model => model.Fraction05, new NumberOption() { NumberOfDecimal = 0, Min = 0, Max = 999999 }, new { onchange = "PackQuantity(5)" })
                    </div>
                    <div class="col-lg-2">
                        @Html.ExtTextBoxFor(model => model.Total05, new { @readonly = "true" })
                    </div>
                </div>

                <div class="row form-group">
                    <div class="col-lg-2">&nbsp;</div>
                    <div class="col-lg-2 padding-right-none">&nbsp;</div>
                    <div class="col-lg-2 padding-right-none">&nbsp;</div>
                    <div class="col-lg-2 padding-right-none">&nbsp;</div>
                    <div class="col-lg-2 padding-right-none">
                        @Html.ExtLabelFor(model => model.GrandTotal, new { @Class = "margin-top-10 float-right ", @readonly = "true" })
                    </div>
                    <div class="col-lg-2">
                        @Html.ExtTextBoxFor(model => model.GrandTotal, new { @readonly = "true" })
                        @*@Html.HiddenFor(model => model.GrandTotal, new { @id = "GrandTotalHidden" })*@
                        <span class="field-validation-error"><span id="GrandTotalError" hidden></span></span>
                    </div>
                </div>


                <div class="row form-group">
                    <div class="col-lg-4">
                        <button type="button" class="btn btn-flat btn-default btn-less-5-chars" id="btnStorage" onclick="
                                Storage()">
                            Storage
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
