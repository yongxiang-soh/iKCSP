@{
    ViewBag.ScreenId = "TCPP051F";
    ViewBag.Title = "Production Plan Simulation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model KCSG.Web.Areas.ProductionPlanning.ViewModels.MaterialSimulation.MaterialSimulationViewModel
@using KCSG.Core.Constants
@using KCSG.Core.Controls
@using KCSG.Core.CustomControls
@using KCSG.jsGrid.MVC
<script src="/Scripts/areas/materialSimulation/materialSimulation.js" type="text/javascript"></script>

<script>
    var formUrl = {
        urlProductPlan: '@Url.Action("ProductPlan", "MaterialSimulation")',
        urlMaterial: '@Url.Action("Generate","MaterialSimulation")',
        urlPopUp :'@Url.Action("PopUp", "MaterialSimulation")'
    }
   
</script>

<div class="col-lg-12">

    @using (Ajax.BeginForm("MaterialChart", "MaterialSimulation",new AjaxOptions(){HttpMethod = "POST",OnSuccess = "onSuccess"},new{id="gerenaFrom"}))
    {
        @Html.HiddenFor(m=>m.IsPlan)
        <div class="panel panel-danger">
            <div class="panel-heading">Search Criteria</div>
            <div class="panel-body">
                <div class="row form-group">
                    <div class="col-xs-3">
                        @Html.Label("Duration")
                    </div>
                    <div class="col-xs-4">
                        <div class="col-xs-3">
                            @Html.ExtLabelFor(m => m.From)
                        </div>
                        <div class="col-xs-9">
                            @Html.ExtDateTimeFor(model => model.From, new DateTimeOption() { Format = "DD/MM/YYYY" })
                        </div>
                    </div>
                    <div class="col-xs-4">
                        <div class="col-xs-3">
                            @Html.ExtLabelFor(m => m.To)
                        </div>
                        <div class="col-xs-9">
                            @Html.ExtDateTimeFor(model => model.To, new DateTimeOption() {Format = "DD/MM/YYYY"})
                        </div>
                    </div>
                </div>
                <div class="row form-group">

                    <div class="col-xs-3">
                        @Html.ExtLabelFor(model => model.InventoryUnderRetrieval)
                    </div>
                    <div class="col-xs-4">
                        @Html.ExtRadioButtonFor(model => model.InventoryUnderRetrieval, EnumHelper.GetSelectList(typeof (Constants.Choice), Constants.Choice.Yes), null, true, 6)
                    </div>

                </div>
                <div class="row form-group">

                    <div class="col-xs-3">
                        @Html.ExtLabelFor(model => model.AcceptedMaterialOnly)
                    </div>
                    <div class="col-xs-4">
                        @Html.ExtRadioButtonFor(model => model.AcceptedMaterialOnly, EnumHelper.GetSelectList(typeof(Constants.Choice), Constants.Choice.Yes), null, true, 6)
                    </div>


                </div>

                <div class="row form-group">
                    <div class="col-xs-3">
                        @Html.ExtLabelFor(model => model.MaterialUsedInOtherCommands)
                    </div>
                    <div class="col-xs-4">
                        @Html.ExtRadioButtonFor(model => model.MaterialUsedInOtherCommands, EnumHelper.GetSelectList(typeof (Constants.Choice), Constants.Choice.Yes), null, true, 6)
                    </div>


                </div>
                <div class="row form-group">
                    <div class="col-xs-3">
                        @Html.ExtLabelFor(model => model.SimulationType)
                    </div>
                    <div class="col-xs-4">
                        @Html.ExtRadioButtonFor(model => model.SimulationType, EnumHelper.GetSelectList(typeof (Constants.SimulationType), Constants.SimulationType.Material), new {id = "rdoSimulationType"}, true, 6)
                    </div>
                </div>
            </div>
           
            <div class="panel-body" id="dvMaterial" >
               
                <div class="row form-group">
                    <div class=" col-lg-12">
                        <div class="col-lg-1"></div>
                        <div class="bg-primary col-lg-10"></div>
                        <div class="col-lg-1"></div>
                    </div>
                </div>
                    <div class="row form-group">
                        <div class="col-xs-3">
                            @Html.ExtLabelFor(model => model.SelectMaterial)
                        </div>
                        <div class="col-xs-8">
                            @Html.Grid(Model.Grid)
                            @Html.HiddenFor(m=>m.SelectMaterial)
                            <span class="field-validation-error" style="display: none" id="erSelectMaterial">
                                <span id="From-error" class="">Please input data for this required field.</span>
                            </span>
                        </div>
                      
                    </div>


                </div>
            <div class="panel-body">
                <div class="row form-group">
                    <div class="col-md-12 ">
                        <input type="button" class="btn btn-flat center-block btn-less-5-chars" style="display: block !important" onclick=" Generate() " value="OK" />
                    </div>
                </div>
            </div>
        </div>
        
    }
   
</div>


<div class="col-lg-12" style="margin-top: 20px;">
    <div id="formPlaceholder"></div>
</div>
